import java.util.Scanner;

Name Max Santomauro
 Class CS1150 #007
 Due Oct 10, 2024

Write a program that determines the strength of a password. For this assignment, password strength
will be based on password entropy, which is a measurement of how predictable a password is. The
program will ask the user for a password, compute the password entropy, then display the password, its
length, entropy, and strength.

public class SantomauroMaxAssignment6 {

	public static void main(String[] args) {
		
		
		Initialize variables here
		final int WEAK_LOWER_BOUND = 28;
		final int WEAK_UPPER_BOUND = 35;
		final int REASONABLE_LOWER_BOUND = 35;
		final int REASONABLE_UPPER_BOUND = 59;
		final int STRONG_LOWER_BOUND = 59;
		final int STRONG_UPPER_BOUND = 127;
		
		int passwordCount = 0;
		boolean testPassword = true;
		
		Scanner user = new Scanner(System.in);
		
		 Display a welcome screen to the user (displayed only one time)
		System.out.println(n
						 +          Welcome to the Password Testern	
				         + nn
						 + Password Entropy         Password Strengthn
				         + -------------------------------------------------n
						 + Less than 28 bits        Very Weakn
				         + 28 - 35 bits             Weakn
						 + 36 - 59 bits             Reasonablen
				         + 60 - 127 bits            Strongn
						 + Greater than 127 bits    Very Strongn
				         + -------------------------------------------------n);
		
		 Create the main loop that allows the user to test passwords as many times as they want
		while(testPassword) {
			 Display option menu
			System.out.println(nSelect an optionn
					          + -------------------------------------------------n
							  + 1) Test Passwordn
					          + 2) Exitnn
							  + Select menu option 1 or 2n);
				
				
			 Within this while loop, create another while loop that validates the user’s choice.
			boolean validMenuOption = false;     
			int menuOption = 0;
			while (!validMenuOption) {
				 use hasNextInt() method to check if the next token in the input stream can 
				  be interpreted as an integer.
				if (user.hasNextInt()) {
					menuOption = user.nextInt();
					if (menuOption == 1  menuOption == 2) {
						validMenuOption = true;
					} else {
						System.out.print(Invalid option. Enter 1 or 2 );
					}
				} else {
					user.next();              Clear invalid input
					System.out.print(Invalid option. Enter 1 or 2 );
				}
			}
				
			create an ifelse condition along with a for condition with the else condition
			  to acquired the user’s choice password.
			if (menuOption == 2) {
				testPassword = false;
			} else {
				 Prompt user for password
				System.out.print(Enter a password to test );
				String password = user.next();
	            boolean valid = true;
	                
	            Validate password for alphanumeric characters
	            for (int i = 0; i  password.length(); i++) {
	               	char character = password.charAt(i);
	               	if (!Character.isLetterOrDigit(character)) {
	               		valid = false;
	               	}
	            }
	            if (!valid) {
	                System.out.println(Password contains non-alphanumeric characters. Try again.n);
	            } else {                                            Password is valid
	               	passwordCount++;   Increment passwordCount
	                	
	               	 Calculate entropy
	               	int length = password.length();
	               	int uniqueCharacters = 62;        Alphanumeric A-Z, a-z, 0-9
	               	double entropy = Math.log10(Math.pow(uniqueCharacters, length))  Math.log10(2);
	                	
	               	Determine strength based of entropy
	               	String strength;
	                	
                	if (entropy  WEAK_LOWER_BOUND) {
                		strength = very weak;
                    } else if (entropy = WEAK_LOWER_BOUND && entropy  WEAK_UPPER_BOUND) {
                        strength = weak;
                    } else if (entropy = REASONABLE_LOWER_BOUND && entropy  REASONABLE_UPPER_BOUND) {
                        strength = reasonable;
                    } else if (entropy = STRONG_LOWER_BOUND && entropy STRONG_UPPER_BOUND) {
	                    strength = strong;
	                } else {
	                    strength = very strong;
	                }
	                	
	               	 Display results
	               	System.out.printf(Password %sn, password);
	                System.out.printf(Length   %dn, password.length());
	                System.out.printf(Entropy  %.2fn, entropy);
	                System.out.printf(Strength %snn, strength);
	                    
	                    
                }
	                
			}
				
			 Display final message
			System.out.printf(Number of passwords tested %dn, passwordCount);
	        System.out.println(Thank you for using the password tester!);

		}
		user.close();
	}

}
